async function fetchData() {
            try {
                const [galleryResponse, noteResponse, imageWrapperResponse] = await Promise.all([
                    fetch(`${process.env.REACT_APP_API_URL}v3/gallary/`),
                    fetch(`${process.env.REACT_APP_API_URL}v3/notes/`),
                    fetch(`${process.env.REACT_APP_API_URL}v3/wrapperImages/`),
                ]);

                const [galleryData, noteData, imageWrapperData] = await Promise.all([
                    galleryResponse.json(),
                    noteResponse.json(),
                    imageWrapperResponse.json(),
                ]);

                setImageArray(galleryData.map((gallery) => gallery.file));
                const randomIndex = Math.floor(Math.random() * galleryData.length);
                setCurrentImageIndex(randomIndex);

                const noteRandomIndex = Math.floor(Math.random() * noteData.length);
                setNotes(noteData[noteRandomIndex]);

                const imageWrapperIndex = Math.floor(Math.random() * imageWrapperData.length);
                setImageWrapperData(imageWrapperData[imageWrapperIndex]);

                if (galleryData.length > 0 && noteData.length > 0) {
                    const interval = setInterval(() => {
                        const randomIndex = Math.floor(Math.random() * galleryData.length);
                        setCurrentImageIndex(randomIndex);

                        const noteRandomIndex = Math.floor(Math.random() * noteData.length);
                        setNotes(noteData[noteRandomIndex]);

                        const imageWrapperIndex = Math.floor(Math.random() * imageWrapperData.length);
                        setImageWrapperData(imageWrapperData[imageWrapperIndex]);
                    }, 15000);

                    return () => clearInterval(interval);
                }
            } catch (error) {
                console.error('Error fetching data:', error);
            }
        }

        fetchData();